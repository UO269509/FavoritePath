// Generated by view binder compiler. Do not edit!
package uo269509.favoritepath.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uo269509.favoritepath.R;

public final class NavHeaderBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView descripcionUsuario;

  @NonNull
  public final ImageView imagenPerfil;

  @NonNull
  public final Button logOutBtn;

  @NonNull
  public final TextView nombreUsuario;

  private NavHeaderBinding(@NonNull LinearLayout rootView, @NonNull TextView descripcionUsuario,
      @NonNull ImageView imagenPerfil, @NonNull Button logOutBtn, @NonNull TextView nombreUsuario) {
    this.rootView = rootView;
    this.descripcionUsuario = descripcionUsuario;
    this.imagenPerfil = imagenPerfil;
    this.logOutBtn = logOutBtn;
    this.nombreUsuario = nombreUsuario;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NavHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NavHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.nav_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NavHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.descripcionUsuario;
      TextView descripcionUsuario = ViewBindings.findChildViewById(rootView, id);
      if (descripcionUsuario == null) {
        break missingId;
      }

      id = R.id.imagenPerfil;
      ImageView imagenPerfil = ViewBindings.findChildViewById(rootView, id);
      if (imagenPerfil == null) {
        break missingId;
      }

      id = R.id.logOutBtn;
      Button logOutBtn = ViewBindings.findChildViewById(rootView, id);
      if (logOutBtn == null) {
        break missingId;
      }

      id = R.id.nombreUsuario;
      TextView nombreUsuario = ViewBindings.findChildViewById(rootView, id);
      if (nombreUsuario == null) {
        break missingId;
      }

      return new NavHeaderBinding((LinearLayout) rootView, descripcionUsuario, imagenPerfil,
          logOutBtn, nombreUsuario);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
